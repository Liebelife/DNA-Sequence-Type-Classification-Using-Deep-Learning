loading configuration file /home/lieberze/DP/Thesis/05_model_training/roberta-trained-new-tokenizer_params_4/config.json
Model config RobertaConfig {
  "adapters": {
    "adapters": {},
    "config_map": {},
    "fusion_config_map": {},
    "fusions": {}
  },
  "architectures": [
    "RobertaForMaskedLM"
  ],
  "attention_probs_dropout_prob": 0.1,
  "bos_token_id": 0,
  "classifier_dropout": null,
  "eos_token_id": 2,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "model_type": "roberta",
  "num_attention_heads": 12,
  "num_hidden_layers": 6,
  "pad_token_id": 1,
  "position_embedding_type": "absolute",
  "torch_dtype": "float32",
  "transformers_version": "4.12.5",
  "type_vocab_size": 1,
  "use_cache": true,
  "vocab_size": 5000
}
loading weights file /home/lieberze/DP/Thesis/05_model_training/roberta-trained-new-tokenizer_params_4/pytorch_model.bin
Some weights of the model checkpoint at /home/lieberze/DP/Thesis/05_model_training/roberta-trained-new-tokenizer_params_4 were not used when initializing RobertaModelWithHeads: ['lm_head.bias', 'lm_head.dense.weight', 'lm_head.dense.bias', 'lm_head.layer_norm.weight', 'lm_head.layer_norm.bias']
- This IS expected if you are initializing RobertaModelWithHeads from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaModelWithHeads from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of RobertaModelWithHeads were not initialized from the model checkpoint at /home/lieberze/DP/Thesis/05_model_training/roberta-trained-new-tokenizer_params_4 and are newly initialized: ['roberta.pooler.dense.weight', 'roberta.pooler.dense.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Adding adapter '2x2_fold_2'.
Adding head '2x2_fold_2' with config {'head_type': 'classification', 'num_labels': 2, 'layers': 2, 'activation_function': 'tanh', 'label2id': {'exon': 0, 'other': 1}, 'use_pooler': False, 'bias': True}.
PyTorch: setting up devices
***** Running training *****
  Num examples = 180000
  Num Epochs = 4
  Instantaneous batch size per device = 16
  Total train batch size (w. parallel, distributed & accumulation) = 48
  Gradient Accumulation steps = 1
  Total optimization steps = 15000
Automatic Weights & Biases logging enabled, to disable set os.environ["WANDB_DISABLED"] = "true"
/home/lieberze/.conda/envs/bio/lib/python3.6/site-packages/torch/nn/parallel/_functions.py:68: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn('Was asked to gather along dimension 0, but all '
total_optimization_steps: 15000
how many 'eval_steps' to set: 1500
how many steps in each evaluation stop: 104
hence in total: 156000 steps for the whole evaluation
***** Running Evaluation *****
  Num examples = 20000
  Batch size = 48
***** Running Evaluation *****
  Num examples = 20000
  Batch size = 48
***** Running Evaluation *****
  Num examples = 20000
  Batch size = 48
***** Running Evaluation *****
  Num examples = 20000
  Batch size = 48
***** Running Evaluation *****
  Num examples = 20000
  Batch size = 48
***** Running Evaluation *****
  Num examples = 20000
  Batch size = 48
Saving model checkpoint to 2x2_CV/checkpoint-10000
Configuration saved in 2x2_CV/checkpoint-10000/2x2_fold_2/adapter_config.json
Module weights saved in 2x2_CV/checkpoint-10000/2x2_fold_2/pytorch_adapter.bin
Configuration saved in 2x2_CV/checkpoint-10000/2x2_fold_2/head_config.json
Module weights saved in 2x2_CV/checkpoint-10000/2x2_fold_2/pytorch_model_head.bin
Configuration saved in 2x2_CV/checkpoint-10000/2x2_fold_2/head_config.json
Module weights saved in 2x2_CV/checkpoint-10000/2x2_fold_2/pytorch_model_head.bin
Configuration saved in 2x2_CV/checkpoint-10000/2x2_fold_2/head_config.json
Module weights saved in 2x2_CV/checkpoint-10000/2x2_fold_2/pytorch_model_head.bin
/home/lieberze/.conda/envs/bio/lib/python3.6/site-packages/torch/nn/parallel/_functions.py:68: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn('Was asked to gather along dimension 0, but all '
***** Running Evaluation *****
  Num examples = 20000
  Batch size = 48
***** Running Evaluation *****
  Num examples = 20000
  Batch size = 48
[34m[1mwandb[39m[22m: Network error resolved after 0:01:27.218425, resuming normal operation.
***** Running Evaluation *****
  Num examples = 20000
  Batch size = 48
***** Running Evaluation *****
  Num examples = 20000
  Batch size = 48
Training completed. Do not forget to share your model on huggingface.co/models =)
***** Running Prediction *****
  Num examples = 20000
  Batch size = 48
***** Running Evaluation *****
  Num examples = 20000
  Batch size = 48
/home/lieberze/.conda/envs/bio/lib/python3.6/site-packages/torch/nn/parallel/_functions.py:68: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn('Was asked to gather along dimension 0, but all '
{'acc': 0.78455, 'f1_weighted': 0.78332571374095, 'report':               precision    recall  f1-score      support
0              0.828329  0.711612  0.765548   9886.00000
1              0.752238  0.855843  0.800703  10114.00000
accuracy       0.784550  0.784550  0.784550      0.78455
macro avg      0.790283  0.783728  0.783125  20000.00000
weighted avg   0.789850  0.784550  0.783326  20000.00000} {'eval_runtime': 57.6367, 'eval_samples_per_second': 347.001, 'eval_steps_per_second': 7.235, 'epoch': 4.0}
Saving model checkpoint to 2x2_CV
Configuration saved in 2x2_CV/2x2_fold_2/adapter_config.json
Module weights saved in 2x2_CV/2x2_fold_2/pytorch_adapter.bin
Configuration saved in 2x2_CV/2x2_fold_2/head_config.json
Module weights saved in 2x2_CV/2x2_fold_2/pytorch_model_head.bin
Configuration saved in 2x2_CV/2x2_fold_2/head_config.json
Module weights saved in 2x2_CV/2x2_fold_2/pytorch_model_head.bin
Configuration saved in 2x2_CV/2x2_fold_2/head_config.json
Module weights saved in 2x2_CV/2x2_fold_2/pytorch_model_head.bin